package frames;

import arduino.*;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import mouseActions.MyMouseMotionListener;

/**
 * Vytvorenie hlavneho okna aplikacie
 *
 * @author Matej
 */
public class MainFrame extends javax.swing.JFrame {

    private String openLocation = "";
    private final String defaultFile = "file.txt";
    private boolean bariestOn = true;
    private boolean freeOn = false;
    private boolean robPosOn = true;
    private boolean unexploredOn = false;
    private final MainFrame mf = this;
    private int multipling = 1;

    /**
     * vytvorenie objektu
     */
    public MainFrame() {
        initComponents();
        setTitle("Map creator");
        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        setResizable(false);

        addMouseMotionListener(new MyMouseMotionListener(statusBar));
        jPanel3.addMouseMotionListener(new MyMouseMotionListener(statusBar));

        addDistancesToList();
        showBarriers.setSelected(true);
        showSkennerPosButt.setSelected(true);

        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                File file = new File("file.txt");
                if (file.exists()) {
                    new ClosingFrame();
                } else {
                    System.exit(0);
                }
            }
        });

        jSlider1.addChangeListener(new ChangeListener() {
            @Override
            public void stateChanged(ChangeEvent e) {
                jPanel3 = new MyJPanel(openLocation, mf, jScrollPane2, jSlider1.getValue());
                jPanel3.addMouseMotionListener(new MyMouseMotionListener(statusBar));
                jPanel3.setBackground(new java.awt.Color(255, 255, 255));
                jScrollPane2.setViewportView(jPanel3);
                multipling = jSlider1.getValue();
            }
        });
    }

    /**
     * ziskanie informacie o tom, ci sa maju vykreslovat prekazky
     *
     * @return true, ak sa maju prekazky vykreslovat, false ak sa nemaju
     */
    public boolean getBariestOn() {
        return bariestOn;
    }

    public boolean getFreeOn() {
        return freeOn;
    }

    public boolean getUnexploredOn() {
        return unexploredOn;
    }

    public boolean getRobPosOn() {
        return robPosOn;
    }

    /**
     * metoda na zapisanie vzdialenosti do oblasti vypisu ziskanych vzdialenosti
     */
    private void addDistancesToList() {
        BufferedReader reader = null;
        DefaultListModel dlm = new DefaultListModel();
        try {
            File file = new File(openLocation);
            reader = new BufferedReader(new FileReader(file));
            String text = null;
            int angle = 0;
            while ((text = reader.readLine()) != null) {
                dlm.addElement(angle++ + "°: " + text + " cm");
            }
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            try {
                if (reader != null) {
                    reader.close();
                }
            } catch (IOException e) {
            }
        }
        distancesList.setModel(dlm);
    }

    /**
     * vytvorenie novej mapy
     */
    public void createNewMap() {
        openLocation = "file.txt";
        jPanel3 = new MyJPanel(openLocation, this, jScrollPane2, 1);
        jPanel3.addMouseMotionListener(new MyMouseMotionListener(statusBar));
        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane2.setViewportView(jPanel3);
        addDistancesToList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        distancesList = new javax.swing.JList();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        colorFreeButt = new javax.swing.JButton();
        colorBarriersButt = new javax.swing.JButton();
        colorUnexploredButt = new javax.swing.JButton();
        showUnexplored = new javax.swing.JRadioButton();
        showFreeSpace = new javax.swing.JRadioButton();
        showBarriers = new javax.swing.JRadioButton();
        jSeparator1 = new javax.swing.JSeparator();
        devPosButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        showSkennerPosButt = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        statusBar = new javax.swing.JLabel();
        newScanButt = new javax.swing.JButton();
        ShMapFS = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel3 = new MyJPanel(openLocation, this, jScrollPane2, 1);
        plusButt = new javax.swing.JButton();
        minusButt = new javax.swing.JButton();
        jSlider1 = new javax.swing.JSlider();
        jLabel3 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        newMenu = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        openMenu = new javax.swing.JMenuItem();
        saveMenu = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        exitMenu = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        setDefault = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenu6 = new javax.swing.JMenu();
        menuFree = new javax.swing.JMenuItem();
        menuBarriers = new javax.swing.JMenuItem();
        menuUnexplored = new javax.swing.JMenuItem();
        menuRobotPos = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        showStatusBarItem = new javax.swing.JCheckBoxMenuItem();
        menuShFree = new javax.swing.JCheckBoxMenuItem();
        menuShBarriers = new javax.swing.JCheckBoxMenuItem();
        menuShUnexplored = new javax.swing.JCheckBoxMenuItem();
        menuShRobotPos = new javax.swing.JCheckBoxMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        distancesList.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jScrollPane1.setViewportView(distancesList);

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0)));

        colorFreeButt.setText("Voľné miesta");
        colorFreeButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorFreeButtActionPerformed(evt);
            }
        });

        colorBarriersButt.setText("Prekážky");
        colorBarriersButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorBarriersButtActionPerformed(evt);
            }
        });

        colorUnexploredButt.setText("Nepreskúmané miesta");
        colorUnexploredButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorUnexploredButtActionPerformed(evt);
            }
        });

        showUnexplored.setText("Zobraz nepreskúmané miesta");
        showUnexplored.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showUnexploredActionPerformed(evt);
            }
        });

        showFreeSpace.setText("Zobraz voľné miesta");
        showFreeSpace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showFreeSpaceActionPerformed(evt);
            }
        });

        showBarriers.setText("Zobraz prekážky");
        showBarriers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showBarriersActionPerformed(evt);
            }
        });

        devPosButton.setText("Pozícia zariadenia");
        devPosButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                devPosButtonActionPerformed(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(204, 204, 204));
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Zvoliť farbu");

        showSkennerPosButt.setText("Zobraz pozíciu skenera");
        showSkennerPosButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showSkennerPosButtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(showSkennerPosButt)
                    .addComponent(showUnexplored)
                    .addComponent(showBarriers)
                    .addComponent(showFreeSpace)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(colorFreeButt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(colorBarriersButt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(devPosButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(colorUnexploredButt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(showFreeSpace)
                .addGap(18, 18, 18)
                .addComponent(showBarriers)
                .addGap(18, 18, 18)
                .addComponent(showUnexplored)
                .addGap(18, 18, 18)
                .addComponent(showSkennerPosButt)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(colorFreeButt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(colorBarriersButt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(colorUnexploredButt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(devPosButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        jLabel1.setText("VZDIALENOSTI:");

        statusBar.setForeground(new java.awt.Color(0, 0, 0));
        statusBar.setText("jLabel2");

        newScanButt.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        newScanButt.setText("NOVÝ SKEN");
        newScanButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newScanButtActionPerformed(evt);
            }
        });

        ShMapFS.setText("Celoobrazovkový režim");
        ShMapFS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShMapFSActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 520, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 477, Short.MAX_VALUE)
        );

        jScrollPane2.setViewportView(jPanel3);

        plusButt.setText("+");
        plusButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusButtActionPerformed(evt);
            }
        });

        minusButt.setText("-");
        minusButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minusButtActionPerformed(evt);
            }
        });

        jSlider1.setMaximum(10);
        jSlider1.setMinimum(1);
        jSlider1.setToolTipText("");
        jSlider1.setValue(1);

        jLabel3.setText("Zoom:");

        jMenu1.setText("Súbor");

        newMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        newMenu.setText("Nový");
        newMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newMenuActionPerformed(evt);
            }
        });
        jMenu1.add(newMenu);
        jMenu1.add(jSeparator2);

        openMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        openMenu.setText("Otvoriť");
        openMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMenuActionPerformed(evt);
            }
        });
        jMenu1.add(openMenu);

        saveMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        saveMenu.setText("Uložiť ako");
        saveMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveMenuActionPerformed(evt);
            }
        });
        jMenu1.add(saveMenu);
        jMenu1.add(jSeparator3);

        exitMenu.setText("Zatvor");
        exitMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuActionPerformed(evt);
            }
        });
        jMenu1.add(exitMenu);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Uprav");

        setDefault.setText("Obnoviť predvolené nastavenia");
        setDefault.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setDefaultActionPerformed(evt);
            }
        });
        jMenu2.add(setDefault);

        jMenuBar1.add(jMenu2);

        jMenu4.setText("Nastavenia");

        jMenu6.setText("Farba");

        menuFree.setText("Voľné miesta");
        menuFree.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuFreeActionPerformed(evt);
            }
        });
        jMenu6.add(menuFree);

        menuBarriers.setText("Prekážky");
        menuBarriers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuBarriersActionPerformed(evt);
            }
        });
        jMenu6.add(menuBarriers);

        menuUnexplored.setText("Nepreskúmané");
        menuUnexplored.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuUnexploredActionPerformed(evt);
            }
        });
        jMenu6.add(menuUnexplored);

        menuRobotPos.setText("Pozícia zariadenia");
        menuRobotPos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuRobotPosActionPerformed(evt);
            }
        });
        jMenu6.add(menuRobotPos);

        jMenu4.add(jMenu6);

        jMenuBar1.add(jMenu4);

        jMenu5.setText("Zobraz");

        showStatusBarItem.setSelected(true);
        showStatusBarItem.setText("Stavový riadok");
        showStatusBarItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showStatusBarItemActionPerformed(evt);
            }
        });
        jMenu5.add(showStatusBarItem);

        menuShFree.setText("Voľné miesta");
        menuShFree.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuShFreeActionPerformed(evt);
            }
        });
        jMenu5.add(menuShFree);

        menuShBarriers.setSelected(true);
        menuShBarriers.setText("Prekážky");
        menuShBarriers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuShBarriersActionPerformed(evt);
            }
        });
        jMenu5.add(menuShBarriers);

        menuShUnexplored.setText("Nepreskúmané miesta");
        menuShUnexplored.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuShUnexploredActionPerformed(evt);
            }
        });
        jMenu5.add(menuShUnexplored);

        menuShRobotPos.setSelected(true);
        menuShRobotPos.setText("Pozícia skenera");
        menuShRobotPos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuShRobotPosActionPerformed(evt);
            }
        });
        jMenu5.add(menuShRobotPos);

        jMenuBar1.add(jMenu5);

        jMenu3.setText("Pomoc");

        jMenuItem5.setText("O programe");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem5);

        jMenuItem6.setText("Pomocník");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem6);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 513, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(150, 150, 150)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(plusButt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(minusButt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(newScanButt, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ShMapFS))
                .addGap(22, 22, 22))
            .addComponent(statusBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(plusButt)
                                    .addComponent(minusButt))))
                        .addGap(11, 11, 11)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(newScanButt, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ShMapFS, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 458, Short.MAX_VALUE)))
                .addGap(11, 11, 11)
                .addComponent(statusBar))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * metoda na vykonanie instrukcii po kliknuti na radioButton s nazvom Show
     * Free Spaces
     *
     * @param evt ActionEvent
     */
    private void showFreeSpaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showFreeSpaceActionPerformed
        // TODO add your handling code here:
        freeOn = showFreeSpace.isSelected();
        menuShFree.setSelected(freeOn);
        ((MyJPanel) jPanel3).render();
    }//GEN-LAST:event_showFreeSpaceActionPerformed

    /**
     * metoda na ziskanie novej farby volnych miest
     *
     * @param evt ActionEvent
     */
    private void colorFreeButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colorFreeButtActionPerformed
        // TODO add your handling code here:
        new ColorFrame(jPanel3, ColorEnum.FREE.ordinal());
    }//GEN-LAST:event_colorFreeButtActionPerformed

    /**
     * Otvorenie noveho suboru s parametrami prostredia
     *
     * @param evt ActionEvent
     */
    private void openMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMenuActionPerformed
        // TODO add your handling code here:
        JFileChooser openSaveFile = new JFileChooser();
        int returnVal = openSaveFile.showOpenDialog(null);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File selectedFile = openSaveFile.getSelectedFile();
            openLocation = selectedFile.getPath();
            jPanel3 = new MyJPanel(openLocation, this, jScrollPane2, 1);
            jPanel3.addMouseMotionListener(new MyMouseMotionListener(statusBar));
            jPanel3.setBackground(new java.awt.Color(255, 255, 255));
            jScrollPane2.setViewportView(jPanel3);
            addDistancesToList();
        } else if (returnVal == JFileChooser.CANCEL_OPTION) {
            openSaveFile.setVisible(false);
        }
    }//GEN-LAST:event_openMenuActionPerformed

    /**
     * metoda na vykonanie instrukcii po kliknuti na tlacidlo New Scan
     *
     * @param evt ActionEvent
     */
    private void newScanButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newScanButtActionPerformed
        // TODO add your handling code here:
        Arduino ard = new Arduino(defaultFile, this);
        ard.start();
    }//GEN-LAST:event_newScanButtActionPerformed

    /**
     * metoda na vykonanie instrukcii po kliknuti na tlacidlo Show Map Full
     * Screen po kliknuti sa mapa zobrazi v celoobrazovkovom rezime
     *
     * @param evt ActionEvent
     */
    private void ShMapFSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShMapFSActionPerformed
        // TODO add your handling code here:
        new MapFrame(openLocation, this);
    }//GEN-LAST:event_ShMapFSActionPerformed

    /**
     * metoda na zobrazenie okna na vyber farby po kliknuti na tlacidlo Color
     * Barriers
     *
     * @param evt ActionEvent
     */
    private void colorBarriersButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colorBarriersButtActionPerformed
        // TODO add your handling code here:
        new ColorFrame(jPanel3, ColorEnum.BARRIERS.ordinal());
    }//GEN-LAST:event_colorBarriersButtActionPerformed

    /**
     * metoda na spracovanie statusu, ci sa maju vykreslit bariery alebo nie
     *
     * @param evt ActionEvent
     */
    private void showBarriersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showBarriersActionPerformed
        // TODO add your handling code here:
        bariestOn = showBarriers.isSelected();
        menuShBarriers.setSelected(bariestOn);
        ((MyJPanel) jPanel3).render();
    }//GEN-LAST:event_showBarriersActionPerformed

    /**
     * kliknutie na polozku z menu - Exit
     *
     * @param evt ActionEvent
     */
    private void exitMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuActionPerformed
        // TODO add your handling code here:
        File file = new File("file.txt");
        if (file.exists()) {
            new ClosingFrame();
        } else {
            System.exit(0);
        }

    }//GEN-LAST:event_exitMenuActionPerformed

    /**
     * Kliknutie na polozku z metu - save. Ulozenie noveho suboru
     *
     * @param evt ActionEvent
     */
    private void saveMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMenuActionPerformed
        // TODO add your handling code here:
        JFileChooser openSaveFile = new JFileChooser();
        int returnVal = openSaveFile.showSaveDialog(null);
        if (returnVal == JFileChooser.APPROVE_OPTION && !openLocation.equals("")) {
            File file = new File(openLocation);
            File selectedFile = openSaveFile.getSelectedFile();
            if (selectedFile.exists()) {
                new MessageBox("Súbor už existuje!");
            } else {
                if (file.renameTo(selectedFile)) {
                    System.exit(0);
                }
            }
        } else if (returnVal == JFileChooser.CANCEL_OPTION) {
            openSaveFile.setVisible(false);
        }
    }//GEN-LAST:event_saveMenuActionPerformed

    /**
     * Metoda na zistenie ci sa ma zobrazit dolny stavovy riadok Kliknutie na
     * polozku z menu - Show Status Bar
     *
     * @param evt ActionEvent
     */
    private void showStatusBarItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showStatusBarItemActionPerformed
        // TODO add your handling code here:
        statusBar.setVisible(showStatusBarItem.getState());
    }//GEN-LAST:event_showStatusBarItemActionPerformed

    /**
     * Vytvorenie noveho skenu. Po kliknuti na polozku z menu - New
     *
     * @param evt ActionEvent
     */
    private void newMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newMenuActionPerformed
        // TODO add your handling code here:
        showBarriers.setSelected(true);
        showSkennerPosButt.setSelected(true);
        showFreeSpace.setSelected(false);
        showUnexplored.setSelected(false);
        menuShBarriers.setSelected(true);
        menuShRobotPos.setSelected(true);
        menuShUnexplored.setSelected(false);
        menuShFree.setSelected(false);

        bariestOn = true;
        freeOn = false;
        robPosOn = true;
        unexploredOn = false;

        openLocation = "";
        jPanel3 = new MyJPanel(openLocation, this, jScrollPane2, 1);
        jPanel3.addMouseMotionListener(new MyMouseMotionListener(statusBar));
        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane2.setViewportView(jPanel3);
        addDistancesToList();
    }//GEN-LAST:event_newMenuActionPerformed

    private void showSkennerPosButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showSkennerPosButtActionPerformed
        // TODO add your handling code here:
        robPosOn = showSkennerPosButt.isSelected();
        menuShRobotPos.setSelected(robPosOn);
        ((MyJPanel) jPanel3).render();
    }//GEN-LAST:event_showSkennerPosButtActionPerformed

    private void devPosButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_devPosButtonActionPerformed
        // TODO add your handling code here:
        new ColorFrame(jPanel3, ColorEnum.SENSOR.ordinal());
    }//GEN-LAST:event_devPosButtonActionPerformed

    private void colorUnexploredButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colorUnexploredButtActionPerformed
        // TODO add your handling code here:
        new ColorFrame(jPanel3, ColorEnum.UNEXPLORED.ordinal());
    }//GEN-LAST:event_colorUnexploredButtActionPerformed

    private void showUnexploredActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showUnexploredActionPerformed
        // TODO add your handling code here:
        unexploredOn = showUnexplored.isSelected();
        menuShUnexplored.setSelected(unexploredOn);
        ((MyJPanel) jPanel3).render();
    }//GEN-LAST:event_showUnexploredActionPerformed

    private void menuBarriersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuBarriersActionPerformed
        // TODO add your handling code here:
        new ColorFrame(jPanel3, ColorEnum.BARRIERS.ordinal());
    }//GEN-LAST:event_menuBarriersActionPerformed

    private void menuShUnexploredActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuShUnexploredActionPerformed
        // TODO add your handling code here:
        unexploredOn = menuShUnexplored.getState();
        showUnexplored.setSelected(unexploredOn);
        ((MyJPanel) jPanel3).render();
    }//GEN-LAST:event_menuShUnexploredActionPerformed

    private void menuShFreeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuShFreeActionPerformed
        // TODO add your handling code here:
        freeOn = menuShFree.getState();
        showFreeSpace.setSelected(freeOn);
        ((MyJPanel) jPanel3).render();
    }//GEN-LAST:event_menuShFreeActionPerformed

    private void menuShBarriersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuShBarriersActionPerformed
        // TODO add your handling code here:
        bariestOn = menuShBarriers.getState();
        showBarriers.setSelected(bariestOn);
        ((MyJPanel) jPanel3).render();
    }//GEN-LAST:event_menuShBarriersActionPerformed

    private void menuShRobotPosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuShRobotPosActionPerformed
        // TODO add your handling code here:
        robPosOn = menuShRobotPos.getState();
        showSkennerPosButt.setSelected(robPosOn);
        ((MyJPanel) jPanel3).render();
    }//GEN-LAST:event_menuShRobotPosActionPerformed

    private void menuFreeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuFreeActionPerformed
        // TODO add your handling code here:
        new ColorFrame(jPanel3, ColorEnum.FREE.ordinal());
    }//GEN-LAST:event_menuFreeActionPerformed

    private void menuUnexploredActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuUnexploredActionPerformed
        // TODO add your handling code here:
        new ColorFrame(jPanel3, ColorEnum.UNEXPLORED.ordinal());
    }//GEN-LAST:event_menuUnexploredActionPerformed

    private void menuRobotPosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuRobotPosActionPerformed
        // TODO add your handling code here:
        new ColorFrame(jPanel3, ColorEnum.SENSOR.ordinal());
    }//GEN-LAST:event_menuRobotPosActionPerformed

    private void setDefaultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setDefaultActionPerformed
        // TODO add your handling code here:
        ColorEnum.BARRIERS.resetColor();
        ColorEnum.FREE.resetColor();
        ColorEnum.SENSOR.resetColor();
        ColorEnum.UNEXPLORED.resetColor();
        ((MyJPanel) jPanel3).render();

        showBarriers.setSelected(true);
        showSkennerPosButt.setSelected(true);
        showFreeSpace.setSelected(false);
        showUnexplored.setSelected(false);
        menuShBarriers.setSelected(true);
        menuShRobotPos.setSelected(true);
        menuShUnexplored.setSelected(false);
        menuShFree.setSelected(false);
        bariestOn = true;
        freeOn = false;
        robPosOn = true;
        unexploredOn = false;
    }//GEN-LAST:event_setDefaultActionPerformed

    private void plusButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusButtActionPerformed
        // TODO add your handling code here:
        if (multipling >= 1 && multipling < 10) {
            multipling++;
            jSlider1.setValue(multipling);
            jPanel3 = new MyJPanel(openLocation, mf, jScrollPane2, multipling);
            jPanel3.addMouseMotionListener(new MyMouseMotionListener(statusBar));
            jPanel3.setBackground(new java.awt.Color(255, 255, 255));
            jScrollPane2.setViewportView(jPanel3);
        }
    }//GEN-LAST:event_plusButtActionPerformed

    private void minusButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minusButtActionPerformed
        // TODO add your handling code here:
        if (multipling > 1 && multipling <= 10) {
            multipling--;
            jSlider1.setValue(multipling);
            jPanel3 = new MyJPanel(openLocation, mf, jScrollPane2, multipling);
            jPanel3.addMouseMotionListener(new MyMouseMotionListener(statusBar));
            jPanel3.setBackground(new java.awt.Color(255, 255, 255));
            jScrollPane2.setViewportView(jPanel3);
        }
    }//GEN-LAST:event_minusButtActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
        new Logo();
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // TODO add your handling code here:
        new Help();
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    /**
     * vytvorenie hlavnej aplikacie
     *
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new MainFrame().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ShMapFS;
    private javax.swing.JButton colorBarriersButt;
    private javax.swing.JButton colorFreeButt;
    private javax.swing.JButton colorUnexploredButt;
    private javax.swing.JButton devPosButton;
    private javax.swing.JList distancesList;
    private javax.swing.JMenuItem exitMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JMenuItem menuBarriers;
    private javax.swing.JMenuItem menuFree;
    private javax.swing.JMenuItem menuRobotPos;
    private javax.swing.JCheckBoxMenuItem menuShBarriers;
    private javax.swing.JCheckBoxMenuItem menuShFree;
    private javax.swing.JCheckBoxMenuItem menuShRobotPos;
    private javax.swing.JCheckBoxMenuItem menuShUnexplored;
    private javax.swing.JMenuItem menuUnexplored;
    private javax.swing.JButton minusButt;
    private javax.swing.JMenuItem newMenu;
    public static javax.swing.JButton newScanButt;
    private javax.swing.JMenuItem openMenu;
    private javax.swing.JButton plusButt;
    private javax.swing.JMenuItem saveMenu;
    private javax.swing.JMenuItem setDefault;
    private javax.swing.JRadioButton showBarriers;
    private javax.swing.JRadioButton showFreeSpace;
    private javax.swing.JRadioButton showSkennerPosButt;
    private javax.swing.JCheckBoxMenuItem showStatusBarItem;
    private javax.swing.JRadioButton showUnexplored;
    private javax.swing.JLabel statusBar;
    // End of variables declaration//GEN-END:variables

}
